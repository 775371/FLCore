% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLQuant.R, R/FLComp.R, R/FLPar.R, R/FLCohort.R
\docType{methods}
\name{propagate}
\alias{propagate}
\alias{propagate,FLCohort-method}
\alias{propagate,FLComp-method}
\alias{propagate,FLPar-method}
\alias{propagate,FLQuant-method}
\alias{propagate-methods}
\title{Method propagate}
\usage{
\S4method{propagate}{FLQuant}(object, iter, fill.iter = TRUE)

\S4method{propagate}{FLComp}(object, iter, fill.iter = TRUE)

\S4method{propagate}{FLPar}(object, iter, fill.iter = TRUE)

\S4method{propagate}{FLCohort}(object, iter, fill.iter = TRUE)
}
\description{
Extend an FLQuant along the iter dimension
}
\details{
FLR objects with a single iteration (length of 1 in the sixth dimension) can
be extended using the \code{propagate} method. The \code{type} argument
selects whether the new iterations are filled with the content of the first
iteration (\code{fill.iter=TRUE}, the default) or filled with NAs
(\code{fill.iter=FALSE}).

For objects of class \code{\linkS4class{FLPar}}, propagate will extend the
object along the last dimension, \code{iter}. The fill.iter argument
defaults to TRUE. Objects do not need to have \code{iter=1} to be extended,
but this only works if fill.iter=FALSE.
}
\section{Generic function}{
 propagate(object)
}
\examples{

# For an FLQuant object
  flq <- FLQuant(rnorm(50), dim=c(5,10))
  propagate(flq, 10)
  # Look at the \% NA in summary...
    summary(propagate(flq, 10, fill.iter=FALSE))
  # ...and compare with
    summary(propagate(flq, 10))


# For an FLStock
data(ple4)
summary(propagate(ple4, 25))


# For an FLPar object
flp <- FLPar(1:10, params=letters[1:10])
propagate(flp, 10)
propagate(flp, 10, fill.iter=FALSE)

# With iters
flp <- FLPar(1:15, params=letters[1:5], iter=3)
propagate(flp, 10, fill.iter=FALSE)


# For an FLStock
flc <- FLCohort(catch.n(ple4))
summary(propagate(flc, 25))

}
\author{
The FLR Team
}
\seealso{
\link{FLComp}
}
\keyword{methods}

