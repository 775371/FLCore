% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FLArray.R, R/FLComp.R, R/FLPar.R
\docType{methods}
\name{units}
\alias{units}
\alias{units,FLArray-method}
\alias{units,FLComp-method}
\alias{units,FLPar-method}
\alias{units<-,FLArray,character-method}
\alias{units<-,FLComp,list-method}
\alias{units<-,FLPar,character-method}
\title{Method units}
\usage{
\S4method{units}{FLArray}(x)

\S4method{units}{FLComp}(x)

\S4method{units}{FLComp,list}(x) <- value

\S4method{units}{FLPar}(x)

\S4method{units}{FLPar,character}(x) <- value
}
\description{
\code{units} attribute for FLQuant objects
}
\details{
Objects of \code{FLArray}-based classes (e.g. \code{\link{FLQuant}}) contain a
\code{units} attribute of class \code{character}. This should be used to store
the corresponding units of measurement.  This attribute can be directly accessed
and modified using the \code{units} and \code{units<-} methods.

For complex objects, \code{units} will return a named list containing the
attributes of all \code{FLQuant} slots. \code{units} of a complex object can
be modified for all slots or a subset of them, by passing a named list with
the new values. See examples below.
}
\section{Generic function}{
 units(x)

units<-(x,value)
}
\examples{
flq <- FLQuant(rnorm(100), dim=c(5,20), units='kg')
units(flq)
units(flq) <- 't'
summary(flq)

# units for a complex object
  data(ple4)
  units(ple4)
  units(ple4) <- list(harvest='hr')
}
\author{
The FLR Team
}
\seealso{
\linkS4class{FLQuant}, \linkS4class{FLPar}, \linkS4class{FLCohort}
}
\keyword{methods}

