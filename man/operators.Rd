% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\docType{methods}
\name{operators}
\alias{\%*\%,FLPar,FLPar-method}
\alias{\%*\%,FLPar,FLQuant-method}
\alias{\%*\%,FLQuant,FLPar-method}
\alias{\%+\%}
\alias{\%+\%,FLPar,FLPar-method}
\alias{\%+\%,FLPar,FLQuant-method}
\alias{\%+\%,FLQuant,FLPar-method}
\alias{\%+\%,FLQuant,FLQuant-method}
\alias{\%+\%-methods}
\alias{\%-\%}
\alias{\%-\%,FLPar,FLPar-method}
\alias{\%-\%,FLPar,FLQuant-method}
\alias{\%-\%,FLQuant,FLPar-method}
\alias{\%-\%,FLQuant,FLQuant-method}
\alias{\%-\%-methods}
\alias{\%/\%,FLPar,FLPar-method}
\alias{\%/\%,FLPar,FLQuant-method}
\alias{\%/\%,FLQuant,FLPar-method}
\alias{\%/\%,FLQuant,FLQuant-method}
\alias{\%^\%}
\alias{\%^\%,FLPar,FLPar-method}
\alias{\%^\%,FLPar,FLQuant-method}
\alias{\%^\%,FLQuant,FLPar-method}
\alias{\%^\%,FLQuant,FLQuant-method}
\alias{\%^\%-methods}
\alias{operators}
\title{Arithmetic operators for differently-sized objects}
\usage{
\S4method{\%*\%}{FLQuant,FLQuant}(x, y)

\S4method{\%/\%}{FLQuant,FLQuant}(e1, e2)

\S4method{\%+\%}{FLQuant,FLQuant}(x, y)

\S4method{\%-\%}{FLQuant,FLQuant}(x, y)

\S4method{\%^\%}{FLQuant,FLQuant}(x, y)

\S4method{\%*\%}{FLPar,FLQuant}(x, y)

\S4method{\%/\%}{FLPar,FLQuant}(e1, e2)

\S4method{\%+\%}{FLPar,FLQuant}(x, y)

\S4method{\%-\%}{FLPar,FLQuant}(x, y)

\S4method{\%^\%}{FLPar,FLQuant}(x, y)

\S4method{\%*\%}{FLQuant,FLPar}(x, y)

\S4method{\%/\%}{FLQuant,FLPar}(e1, e2)

\S4method{\%+\%}{FLQuant,FLPar}(x, y)

\S4method{\%-\%}{FLQuant,FLPar}(x, y)

\S4method{\%^\%}{FLQuant,FLPar}(x, y)

\S4method{\%*\%}{FLPar,FLPar}(x, y)

\S4method{\%+\%}{FLPar,FLPar}(x, y)

\S4method{\%-\%}{FLPar,FLPar}(x, y)

\S4method{\%/\%}{FLPar,FLPar}(e1, e2)

\S4method{\%^\%}{FLPar,FLPar}(x, y)
}
\arguments{
\item{x, e1}{First term of the operation}

\item{y, e2}{Second term of the operation}
}
\value{
An object of one of the input classes, see Details.
}
\description{
These arithmetic operators are able to handle \code{FLArray}-based objects where
one dimension is of unequal length. The overloaded \code{Arith} methods for
class \code{FLQuant} were already able to operaste on objects with different number of
\code{iters}, by extending the object of length=1. This is now possible across any
dimension, with the folowing limitations.
The two objects can only differ in one of the dimensions, and the difference has
to be of 1 vs. N, e.g. the object to extend must have length=1 in the dimension
not shared with the larger one.
Operation between objects of class \code{FLQuant} and \code{FLPar} always return an
\code{FLQuant}.
The original Matrix multiplication operator, \code{\link[base]{matmult}}, is not
available for \code{FLQuant} and \code{FLPar} objects. Please convert them into
array if you need to use it.
}
\examples{

x <- FLQuant(1:100, dim=c(5, 5, 1, 4))
y <- FLQuant(5, dim=c(5, 5, 1))

x \%+\% y
x \%-\% y
x \%*\% y
}
\author{
The FLR Team
}
\seealso{
\link{FLComp}, \link[base]{matmult}
}
\keyword{classes}

