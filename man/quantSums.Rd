% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLQuant.R, R/FLQuantDistr.R, R/FLPar.R
\docType{methods}
\name{quantSums}
\alias{areaMeans,FLQuant-method}
\alias{areaMeans,FLQuantDistr-method}
\alias{areaSums,FLQuant-method}
\alias{areaSums,FLQuantDistr-method}
\alias{areaVars,FLQuant-method}
\alias{areaVars,FLQuantDistr-method}
\alias{iterMeans,FLPar-method}
\alias{iterMeans,FLQuant-method}
\alias{iterMeans,FLQuantDistr-method}
\alias{iterMedians,FLPar-method}
\alias{iterMedians,FLQuant-method}
\alias{iterMedians,FLQuantDistr-method}
\alias{iterVars,FLPar-method}
\alias{iterVars,FLQuant-method}
\alias{iterVars,FLQuantDistr-method}
\alias{quantMeans,FLQuant-method}
\alias{quantMeans,FLQuantDistr-method}
\alias{quantSums}
\alias{quantSums,FLQuant-method}
\alias{quantSums-methods}
\alias{quantVars,FLQuant-method}
\alias{quantVars,FLQuantDistr-method}
\alias{seasonMeans,FLQuant-method}
\alias{seasonMeans,FLQuantDistr-method}
\alias{seasonSums,FLQuant-method}
\alias{seasonSums,FLQuantDistr-method}
\alias{seasonVars,FLQuant-method}
\alias{seasonVars,FLQuantDistr-method}
\alias{unitMeans,FLQuant-method}
\alias{unitMeans,FLQuantDistr-method}
\alias{unitSums,FLQuant-method}
\alias{unitSums,FLQuantDistr-method}
\alias{unitVars,FLQuant-method}
\alias{unitVars,FLQuantDistr-method}
\alias{yearMeans,FLQuant-method}
\alias{yearMeans,FLQuantDistr-method}
\alias{yearSums,FLQuant-method}
\alias{yearSums,FLQuantDistr-method}
\alias{yearVars,FLQuant-method}
\alias{yearVars,FLQuantDistr-method}
\title{Methods quantSums}
\usage{
\S4method{quantSums}{FLQuant}(x, na.rm = TRUE)

\S4method{yearSums}{FLQuant}(x, na.rm = TRUE)

\S4method{unitSums}{FLQuant}(x, na.rm = TRUE)

\S4method{seasonSums}{FLQuant}(x, na.rm = TRUE)

\S4method{areaSums}{FLQuant}(x, na.rm = TRUE)

\S4method{quantMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{yearMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{unitMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{seasonMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{areaMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{iterMeans}{FLQuant}(x, na.rm = TRUE)

\S4method{iterMedians}{FLQuant}(x, na.rm = TRUE)

\S4method{quantVars}{FLQuant}(x, na.rm = TRUE)

\S4method{yearVars}{FLQuant}(x, na.rm = TRUE)

\S4method{unitVars}{FLQuant}(x, na.rm = TRUE)

\S4method{seasonVars}{FLQuant}(x, na.rm = TRUE)

\S4method{areaVars}{FLQuant}(x, na.rm = TRUE)

\S4method{iterVars}{FLQuant}(x, na.rm = TRUE)

\S4method{yearSums}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{unitSums}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{seasonSums}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{areaSums}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{yearMeans}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{unitMeans}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{seasonMeans}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{areaMeans}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{iterMeans}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{iterMedians}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{quantVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{yearVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{unitVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{seasonVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{areaVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{iterVars}{FLQuantDistr}(x, na.rm = TRUE)

\S4method{iterMeans}{FLPar}(x, na.rm = TRUE)

\S4method{iterMedians}{FLPar}(x, na.rm = TRUE)

\S4method{iterVars}{FLPar}(x, na.rm = TRUE)
}
\arguments{
\item{x}{An object.}

\item{na.rm}{Should NAs be removed before calculation? Defaults to TRUE.}
}
\description{
Methods to compute sums, means and variances along the various dimensions of
\code{FLQuant}, \code{FLPar} and \code{FLQuantDistr} objects
}
\details{
This set of methods computes three different summaries (sum, mean and
variance) of an \code{FLQuant} object along each of the six dimensions
(quant, year, unit, season, area, or iter). Medians can also be computed
along the sixth dimension, \code{iter}.

These methods simply encapsulate a call to \code{\link[base]{apply}} with
the corresponding dimensions and function.

Sums are not calculated for the \code{iter} dimension, as it is used to
store multiple replicates of a given array of values.

Methods along the iter dimension are also defined for objects of class
\code{FLPar}.

Methods to operate over the first dimension refer to it as the \code{quant}
dimension, regardless of the actual name used in the object.

The output object will have length=1 on the selected dimension.
}
\section{Generic methods}{

quantSums(x), quantMeans(x), quantVars(x)
yearSums(x), yearMeans(x), yearVars(x)
unitSums(x), unitMeans(x), unitVars(x)
seasonSums(x), seasonMeans(x), seasonVars(x)
areaSums(x), areaMeans(x), areaVars(x)
iterMeans(x), iterVars(x), iterMedians(x)
dimSums(x), dimMeans(x), dimVars(x)
}
\examples{

 flq <- FLQuant(rnorm(4000), dim=c(5,10,2,2,2,10), quant='age')
 quantSums(flq)
 quantMeans(flq)
 yearSums(flq)
 iterMeans(flq)
 dim(quantSums(flq))

}
\author{
The FLR Team
}
\seealso{
\link{FLQuant}, \link[base]{sum}, \link[base]{mean},
\link[stats]{var}
}
\keyword{methods}

